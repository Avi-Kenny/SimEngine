% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run.R
\name{run}
\alias{run}
\title{Run the simulation}
\usage{
run(sim_obj, sim_uids = NA)
}
\arguments{
\item{sim_obj}{A simulation object of class \code{simba}, usually created by
\link{new_sim}}

\item{sim_uids}{Advanced; a vector of \code{sim_uid} values, each of which
uniquely identifies a simulation replicate. This will normally be
omitted. If this is specified, only the simulation replicates with a
matching \code{sim_uid} will be run.}
}
\value{
The original simulation object but with the results attached (along
    with any errors and warnings). Results are stored in \code{sim$results},
    errors are stored in \code{sim$errors}, and warnings are stored in
    \code{sim$warnings}.
}
\description{
This is the workhorse function of \pkg{simba} that actually runs
    the simulation. This should be called after all functions that set up the
    simulation (\code{add_creator}, \code{set_config}, etc.) have been
    called.
}
\examples{
# The following is a toy example of a simulation, illustrating the use of
# the run function.
sim <- new_sim()
sim \%<>\% add_creator("create_data", function(n) { rpois(n, lambda=5) })
sim \%<>\% add_method("estimator_1", function(dat) { mean(dat) })
sim \%<>\% add_method("estimator_2", function(dat) { var(dat) })
sim \%<>\% set_levels(
  "n" = c(10, 100, 1000),
  "estimator" = c("estimator_1", "estimator_2")
)
sim \%<>\% set_config(num_sim=1)
sim \%<>\% set_script(function() {
  dat <- create_data(L$n)
  lambda_hat <- use_method(L$estimator, list(dat))
  return (list("lambda_hat"=lambda_hat))
})
sim \%<>\% run()
sim$results \%>\% print()
}
