% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/set_script.R
\name{set_script}
\alias{set_script}
\title{Set the "simulation script"}
\usage{
set_script(sim_obj, fn)
}
\arguments{
\item{sim_obj}{A simulation object of class \code{simba}, usually created by
\link{new_sim}}

\item{fn}{A function that runs a single simulation replicate and returns the
result. The result must be a list of key-value pairs. The values
themselves can either be simple (numeric, character, etc.) or complex
(matrices, lists, etc.). The function body can contain references to the
special objects \code{L} (simulation levels) and \code{C} (simulation constants).
See examples.}
}
\value{
The original simulation object with the new "simulation script"
    function added.
}
\description{
Specify a function to be used as the "simulation script". The
    simulation script is a function that runs a single simulation replicate
    and returns the results.
}
\examples{
# The following is a toy example of a simulation, illustrating the use of
# the set_script function.
sim <- new_sim()
sim \%<>\% add_creator("create_data", function(n) { rpois(n, lambda=5) })
sim \%<>\% add_method("estimator_1", function(dat) { mean(dat) })
sim \%<>\% add_method("estimator_2", function(dat) { var(dat) })
sim \%<>\% set_levels(
  "n" = c(10, 100, 1000),
  "estimator" = c("estimator_1", "estimator_2")
)
sim \%<>\% set_config(num_sim=1)
sim \%<>\% set_script(function() {
  dat <- create_data(L$n)
  lambda_hat <- do.call(L$estimator, list(dat))
  return (list("lambda_hat"=lambda_hat))
})
sim \%<>\% run()
sim$results
}
